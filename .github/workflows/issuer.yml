name: CI-CD-VC-issuer

on:
  #push:
  #  branches:
  #   - main
  #schedule:
  #    actually, ~5 minutes is the highest
  #    effective frequency you will get
  # - cron:  '*/5 * * * *'
  workflow_dispatch:
  
env:
  AWS_REGION: us-east-2                     # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: vc                        # set this to your Amazon ECR repository name
  ECS_SERVICE: VC-issuer-test               # set this to your Amazon ECS service name
  ECS_CLUSTER: ECS-cluster-nodes            # set this to your Amazon ECS cluster name
  ECS_TASK_DEFINITION: VC-issuer-test       # set this to the path to your Amazon ECS task definition
                                            # file, e.g. .aws/task-definition.json
  CONTAINER_NAME: VC-issuer-container       # set this to the name of the container in the
                                            # containerDefinitions section of your task definition
  
jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    
    steps:
     - name: Checkout
       uses: actions/checkout@v2

     - name: Configure AWS credentials
       uses: aws-actions/configure-aws-credentials@v1
       with:
         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
         aws-region: ${{ env.AWS_REGION }}
     - name: Login to Amazon ECR
       id: login-ecr
       uses: aws-actions/amazon-ecr-login@v1

     - name: Build, tag, and push image to Amazon ECR
       id: build-image
       env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
       run: |
          # Build a docker container and
          # push it to ECR so that it can
          # be deployed to ECS.
          cd ./issuer/
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:issuer_$IMAGE_TAG .
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:issuer_$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:issuer_latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:issuer_$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:issuer_latest
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
     
     - name: Download task definition
       run: |
        aws ecs describe-task-definition --task-definition ${{ env.ECS_TASK_DEFINITION }} --query taskDefinition > ${{ env.ECS_TASK_DEFINITION }}
          
     - name: Fill in the new image ID in the Amazon ECS task definition
       id: task-def
       uses: aws-actions/amazon-ecs-render-task-definition@v1
       with:
          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ steps.build-image.outputs.image }}

     - name: Deploy Amazon ECS task definition
       uses: aws-actions/amazon-ecs-deploy-task-definition@v1
       with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true
